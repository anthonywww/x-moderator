-- Schema Overlay: awake-amazing-lichterman (1727588703)
-- Created On: 2024-09-29 05:45:02
--
-- DO NOT EDIT THIS FILE AFTER IT HAS BEEN COMMITTED
-- CREATE A NEW SCHEMA OVERLAY `migrator.py create` INSTEAD
--

-- Table for user accounts from X (fka. Twitter)
CREATE TABLE IF NOT EXISTS users (
    `id` BIGINT(12) UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    `date_created` BIGINT(12) UNSIGNED NOT NULL,
    `name` VARCHAR(30) NOT NULL COMMENT 'Display name',
    `username` VARCHAR(16) NOT NULL COMMENT 'User handle including @',
    `oauth2_data` VARCHAR(255) NOT NULL COMMENT 'OAuth2 JSON data and token (authentication)',
    `date_last_action` BIGINT(12) UNSIGNED NOT NULL COMMENT 'Timestamp of last user action',
    `permission` TINYINT(1) UNSIGNED NOT NULL DEFAULT 0 COMMENT 'Permission level; USER = 0, MODERATOR = 1, ADMINISTRATOR = 2',
    `is_disabled` TINYINT(1) UNSIGNED NOT NULL DEFAULT 0 COMMENT 'Flag indicating this staff user may not login',
    `staff_notes` VARCHAR(255) NOT NULL COMMENT 'Internal notes for staff written by human staff',
    `llm_notes` TEXT NOT NULL COMMENT 'Internal notes for staff written by a LLM evaluating the user reputation'
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- Table for logging activities across services
CREATE TABLE IF NOT EXISTS logs (
    `id` BIGINT(12) UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    `date_created` BIGINT(12) UNSIGNED NOT NULL,
    `user_id` BIGINT(12) UNSIGNED NOT NULL COMMENT 'User ID; SYSTEM = 0, AUTOMATION = 1-9',
    `component` VARCHAR(30) NOT NULL COMMENT 'Component: [auth, action, bot, websocket]',
    `level` TINYINT(3) UNSIGNED NOT NULL COMMENT 'Logging level',
    `message` TEXT NOT NULL COMMENT 'JSON message structure described in docs/logging.md#service_format'
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- Table for user posts from X
CREATE TABLE IF NOT EXISTS posts (
    `id` BIGINT(12) UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    `date_created` BIGINT(12) UNSIGNED NOT NULL,
    `user_id` BIGINT(12) UNSIGNED NOT NULL COMMENT 'The User ID from the users table',
    `x_post_id` VARCHAR(30) NOT NULL COMMENT 'X/Twitter Post ID (external id)',
    `post_status` TINYINT(3) UNSIGNED NOT NULL COMMENT '0 = Available, 1 = Hidden, 2 = Deleted',
    `embed_status` TINYINT(3) UNSIGNED NOT NULL COMMENT '0 = Not Embedded, 1 = Embedding, 2 = Embedded',
    `content` TEXT NOT NULL,
    `reviewed_by` BIGINT(12) UNSIGNED COMMENT 'Moderator or system ID that reviewed the post'
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- Table for tracking user violations or strikes
CREATE TABLE IF NOT EXISTS user_violations (
    `id` BIGINT(12) UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    `date_created` BIGINT(12) UNSIGNED NOT NULL,
    `user_id` BIGINT(12) UNSIGNED NOT NULL,
    `staff_id` BIGINT(12) UNSIGNED NOT NULL COMMENT 'ID of the staff that assigned the violation; SYSTEM = 0, AUTOMATION = 1-9',
    `severity` TINYINT(3) UNSIGNED NOT NULL,
    `category` VARCHAR(30) NOT NULL COMMENT 'Category format: "category.subcategory"',
    `reason` VARCHAR(255) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- Table for tracking user metrics over time
CREATE TABLE IF NOT EXISTS user_deltas (
    `id` BIGINT(12) UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    `date_created` BIGINT(12) UNSIGNED NOT NULL,
    `user_id` BIGINT(12) UNSIGNED NOT NULL,
    `staff_id` BIGINT(12) UNSIGNED NOT NULL COMMENT 'ID of the user that assigned the value; SYSTEM = 0, AUTOMATION = 1-9',
    `v_reputation` TINYINT(3) NOT NULL COMMENT 'Reputation delta, range -128 to 127',
    `v_engagement` TINYINT(3) NOT NULL COMMENT 'Engagement delta',
    `v_likes` TINYINT(3) NOT NULL COMMENT 'Likes delta',
    `v_ratio` TINYINT(3) NOT NULL COMMENT 'Ratio delta'
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- Table for staff comments on posts
CREATE TABLE IF NOT EXISTS post_comments (
    `id` BIGINT(12) UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    `date_created` BIGINT(12) UNSIGNED NOT NULL,
    `post_id` BIGINT(12) UNSIGNED NOT NULL COMMENT 'ID of the post that this comment is referencing',
    `author_id` BIGINT(12) UNSIGNED NOT NULL COMMENT 'ID of the staff that posted this comment',
    `comment` VARCHAR(255) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- Indexes
--CREATE INDEX idx_users_id ON users(id);
CREATE INDEX idx_logs_user_id ON logs(user_id);
CREATE INDEX idx_users_username ON users(username);
CREATE INDEX idx_posts_user_id ON posts(user_id);
CREATE INDEX idx_posts_x_post_id ON posts(x_post_id);
CREATE INDEX idx_user_violations_user_id ON user_violations(user_id);
CREATE INDEX idx_user_violations_staff_id ON user_violations(staff_id);
CREATE INDEX idx_user_deltas_user_id ON user_deltas(user_id);
CREATE INDEX idx_user_deltas_staff_id ON user_deltas(staff_id);
CREATE INDEX idx_post_comments_post_id ON post_comments(post_id);
CREATE INDEX idx_post_comments_author_id ON post_comments(author_id);

-- Start user IDs from 10
ALTER TABLE users AUTO_INCREMENT = 10;

-- Foreign Keys
--SET foreign_key_checks = 0;
--ALTER TABLE posts ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE CASCADE;
--ALTER TABLE posts ADD FOREIGN KEY (`reviewed_by`) REFERENCES `users` (`id`) ON DELETE SET NULL;
--ALTER TABLE user_violations ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE CASCADE;
--ALTER TABLE user_violations ADD FOREIGN KEY (`staff_id`) REFERENCES `users` (`id`) ON DELETE SET NULL;
--ALTER TABLE user_deltas ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE CASCADE;
--ALTER TABLE user_deltas ADD FOREIGN KEY (`staff_id`) REFERENCES `users` (`id`) ON DELETE SET NULL;
--ALTER TABLE post_comments ADD FOREIGN KEY (`post_id`) REFERENCES `posts` (`id`) ON DELETE CASCADE;
--ALTER TABLE post_comments ADD FOREIGN KEY (`author_id`) REFERENCES `users` (`id`) ON DELETE CASCADE;
--SET foreign_key_checks = 1;
